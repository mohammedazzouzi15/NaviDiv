import glob
import os
import subprocess
from pathlib import Path

import plotly.io as pio
import streamlit as st

from navidiv.app_utils.plot_generated_molecules import (
    plot_generated_molecules,
)
from navidiv.app_utils.plot_results import plot_results


def initialize_app():
    """Initialize the Streamlit app settings."""
    st.set_page_config(layout="wide", initial_sidebar_state="auto")
    pio.templates.default = "plotly"
    st.title("Molecule TSNE & Substructure Explorer")
    return True


# Generated by Copilot
def do_tsne(file_path):
    """Run t-SNE analysis on the provided CSV file.
    Args:
        file_path (str): Path to the CSV file containing molecular data.
    Returns:
        bool: True if t-SNE analysis was successful, False otherwise.
    """
    step_increment = st.sidebar.number_input( "step increment", min_value=1, max_value=100, value=10, step=1)
    if st.sidebar.button("Run t-SNE"):
        cmd = [
            "python3",
            "src/navidiv/get_tsne.py",
            "--df_path",
            file_path,
            "--step",
            str(step_increment),
        ]
        try:
            subprocess.run(cmd, check=True)
            st.success("t-SNE analysis complete.")
            st.session_state.file_path = file_path.replace(".csv", "_TSNE.csv")
            return True
        except Exception as e:
            st.error(f"Error running t-SNE: {e}")
    return False


def on_change_file_path():
    st.session_state.file_path = st.session_state.file_path_input


# Streamlit app
def main() -> None:
    """Main entry point for the Streamlit app.

    Handles UI and file selection.
    """
    initialised = initialize_app()
    if initialised:
        st.write(
            "Enter the path to your CSV file and select columns to visualize."
        )
        col1, col2 = st.columns(2)
        with col1:
            # if st.button("Upload CSV file"):
            val = st.text_input(
                "Enter the path to your CSV file",
                key="file_path_input",
                on_change=on_change_file_path,
            )
            if st.button("Load CSV file"):
                if not val:
                    st.error("Please enter a valid file path.")
                else:
                    st.session_state.file_path = val
                    st.success(f"File loaded: {st.session_state.file_path}")
            if val:
                do_tsne(st.session_state.file_path)

                plot_generated_molecules(st.session_state.file_path)
        with col2:
            if hasattr(st.session_state, "output_path"):
                if not os.path.exists(st.session_state.output_path):
                    os.makedirs(st.session_state.output_path)
                csv_files = [
                    Path(files).relative_to(st.session_state.output_path)
                    for files in glob.glob(
                        f"{st.session_state.output_path}/*/*.csv"
                    )
                ]

                file_path_results = st.selectbox(
                    "Select a CSV file from folder", csv_files
                )
                if file_path_results:
                    plot_results(
                        f"{st.session_state.output_path}/{file_path_results}"
                    )


if __name__ == "__main__":
    main()
# Generated by Copilot
